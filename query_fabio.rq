PREFIX dbt: <http://dbpedia.org/resource/Template:>
PREFIX dbc: <http://dbpedia.org/resource/Category:>
PREFIX db: <http://dbpedia.org/>
PREFIX dcterm: <http://purl.org/dc/terms/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX dt: <http://dbpedia.org/datatype/>
PREFIX sc: <http://purl.org/science/owl/sciencecommons/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX schema: <https://schema.org/>
PREFIX dbpedia: <http://dbpedia.org/ontology/>

PREFIX anime: <http://www.semanticweb.org/ontology/anime/>

# 1. (Fabio) tutti gli anime adatti per adulti (NC-17) e con un particolare genere (Action) usciti negli ultimi 7 anni
#SELECT ?element ?category ?date (GROUP_CONCAT(?genreTitle; SEPARATOR=", ") AS ?genres)
#WHERE {
#  ?element rdf:type dbpedia:Anime ;
#    schema:contentRating anime:Rating_NC-17 ;
#    schema:genre ?genre .
#  ?genre dcterms:title ?genreTitle .
#  ?element schema:genre anime:Genre_Action .
#  OPTIONAL {									# select all the movies
#    ?element schema:datePublished ?date ;
#    BIND("Movie" AS ?category) .
#  } .
#  OPTIONAL {									# select all the tv series
#    ?element schema:airingStartDate ?date ;
#    BIND("Serie" AS ?category) .
#  } .
#  FILTER ( 										# filtra le date meno recenti di oggi - 7 anni
#    ?date >= now() - xsd:duration("P7Y")
#  )
#}
#GROUP BY ?element ?category ?date


# 3. (Fabio) dato un nome di anime, tabulare tutte le opere relative in ordine di uscita
#SELECT ?element ?date ?category ?sequel ?spinOff
#WHERE {
#  ?firstElement rdf:type dbpedia:Anime ;
#    dcterms:title ?originalTitle ;
#  	BIND(STR(?originalTitle) AS ?title) . 		# estrai tutti i titoli associati ed ignora @lingua
#  FILTER ( ?title = "Dragon Ball" ) .			# seleziona il titolo che corrisponde esattamente a Dragon Ball
#  ?element anime:hasRelation ?firstElement .	# find all the associated elements to the first element
#  OPTIONAL {									# select all the movies
#    ?element schema:datePublished ?date ;
#    BIND("Movie" AS ?category) .
#  } .
#  OPTIONAL {									# select all the tv series
#    ?element schema:airingStartDate ?date ;
#    BIND("Serie" AS ?category) .
#  } .
#  OPTIONAL {									# select all the sequels
#    ?element anime:hasSequel ?sequel .
#  } .
#  OPTIONAL {									# select all the spin offs
#    ?element anime:hasSpinOff ?spinOff .
#  } .
#}
#ORDER BY ?date									# order by date

# 6. (Fabio) i 3 anime più ridoppiati
# PROBLEMA: un anime può essere ridoppiato in italiano e su pi+ piattaforme. Al momento si contano tutte le istanze anche duplicate quindi ridoppiaggio in italiano su due siti diversi viene contato entrambe le volte
SELECT ?element (COUNT(DISTINCT ?streamingLanguage) AS ?languagesCount)	# conteggio linguaggi distinti per elemento
WHERE {
  ?element rdf:type dbpedia:Anime ;
    anime:isStreamedOn ?streamingEvent .
  ?streamingEvent schema:inLanguage ?streamingLanguage .
  ?streamingEvent schema:publishedOn ?streamingPlatform .
}
GROUP BY ?element
ORDER BY DESC(?languagesCount)
LIMIT 3		

# 8. (Fabio) tutti gli anime currently airing e relative piattaforme di streaming
#SELECT ?element (GROUP_CONCAT(?platformTitle; SEPARATOR=", ") AS ?platforms)
#WHERE {
#  ?element rdf:type dbpedia:Anime ;
#    anime:creativeWorkStatus anime:CreativeWorkStatus_Finished_Airing .
#  ?element anime:isStreamedOn ?streamingEvent .
#  ?streamingEvent schema:publishedOn ?publishedOn .
#  ?publishedOn dcterms:title ?platformTitle .
#}
#GROUP BY ?element

# 10. (Fabio) dato un titolo di un anime, fornire siti di streaming+lingue disponibili 
# NB ho tolto la seconda parte che era uguale ad un altra query 3
#SELECT ?title ?streamingPlatformTitle (GROUP_CONCAT(?languageTitle; SEPARATOR=", ") AS ?language)
#WHERE {
#  ?element rdf:type dbpedia:Anime ;
#    anime:isStreamedOn ?streamingEvent ;
#    dcterms:title ?originalTitle ;
#    BIND(STR(?originalTitle) AS ?title) .
#  FILTER ( CONTAINS(?title, "Dragon Ball") ) .
#  ?streamingEvent schema:inLanguage ?streamingLanguage ;
#    schema:publishedOn ?streamingPlatform . 
#  ?streamingLanguage dcterms:title ?languageTitle .
#  MINUS {
#    ?streamingLanguage dcterms:alternative ?languageTitle.
#  }
#  ?streamingPlatform dcterms:title ?streamingPlatformTitle.
#}
#GROUP BY ?title ?streamingPlatformTitle
