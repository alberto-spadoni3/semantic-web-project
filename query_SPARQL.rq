PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX schema: <https://schema.org/>
PREFIX dbpedia: <http://dbpedia.org/ontology/>
PREFIX anime: <http://www.semanticweb.org/ontology/anime/>


# 1. (Fabio) tutti gli anime adatti per adulti (NC-17) e con un particolare genere (Action) usciti negli ultimi 7 anni
SELECT 
    ?element ?category ?date 
    (GROUP_CONCAT(?genreTitle; SEPARATOR=", ") AS ?genres)
WHERE {
    ?element rdf:type dbpedia:Anime ;
             schema:contentRating anime:Rating_NC-17 ;
             schema:genre ?genre .
    ?genre dcterms:title ?genreTitle .
    ?element schema:genre anime:Genre_Action .
    OPTIONAL {									      # select all the movies
        ?element schema:datePublished ?date ;
                 BIND("Movie" AS ?category) .
    } 
    OPTIONAL {									      # select all the tv series
        ?element schema:airingStartDate ?date ;
                 BIND("Serie" AS ?category) .
    } 
    FILTER ( ?date >= now() - xsd:duration("P7Y") . ) # filtra le date meno recenti di oggi - 7 anni
}
GROUP BY ?element ?category ?date


# Query 2
# Per ogni piattaforma di streaming, contare il numero di anime che sono disponibili con i sottotitoli in italiano.
SELECT 
    ?platformTitle 
    (COUNT(?anime) AS ?AnimeCount) WHERE {
    ?brd_event schema:publishedOn ?platform ;
               schema:subtitleLanguage anime:Language_it-IT ;
               anime:providesContentFor ?anime .
    ?platform dcterms:title ?platformTitle .
}
GROUP BY ?platform ?platformTitle


# 3. (Fabio) dato un nome di anime, tabulare tutte le opere relative in ordine di uscita
SELECT 
    ?element ?date ?category 
    ?sequel ?spinOff
WHERE {
    ?firstElement rdf:type dbpedia:Anime ;
                  dcterms:title ?originalTitle ;
                  BIND(STR(?originalTitle) AS ?title) .    # estrai tutti i titoli associati ed ignora @lingua
    FILTER ( ?title = "Dragon Ball" ) .			           # seleziona il titolo che corrisponde esattamente a Dragon Ball
    ?element anime:hasRelation ?firstElement .	           # find all the associated elements to the first element
    OPTIONAL {									           # select all the movies
        ?element schema:datePublished ?date ;
        BIND("Movie" AS ?category) .
    } 
    OPTIONAL {									           # select all the tv series
        ?element schema:airingStartDate ?date ;
        BIND("Serie" AS ?category) .
    } 
    OPTIONAL { ?element anime:hasSequel ?sequel . }		   # select all the sequels
    OPTIONAL { ?element anime:hasSpinOff ?spinOff . }      # select all the spin offs
}
ORDER BY ?date									           # order by date


# Query 4
# A partire da una qualsiasi stringa, mostrare tutti gli anime che contengono
# tale stringa nel titolo e alcune informazioni relative.
SELECT 
	?anime_name ?animeAlterName ?animeURL 
    ?status ?producer
    ?rating ?audience
    (GROUP_CONCAT(?genre; SEPARATOR=", ") AS ?animeGenres)
WHERE {
  	?anime a dbpedia:Anime ;
           dcterms:title ?anime_name ;
           schema:url ?animeURL ;
           anime:creativeWorkStatus [dcterms:title ?status]	;
           schema:contentRating [ dcterms:title ?rating ] ;
           schema:audience [ schema:audienceType ?audience] ;
           schema:producer [ dcterms:title ?producer] ;
           schema:genre [ dcterms:title ?genre ] .

    OPTIONAL { 
        ?anime dcterms:alternative ?animeAlterName .
        FILTER(!sameTerm(?anime_name, ?animeAlterName)) .
    }

    FILTER regex(?anime_name, "${STRING}", "i") .
}
GROUP BY ?anime_name ?animeAlterName ?animeURL ?status ?producer ?rating ?audience


# Query 5
# I 5 voice actor con più personaggi doppiati
SELECT 
    ?voiceActorName (COUNT(?characterName) AS ?voicedAnimeCount)
    (GROUP_CONCAT(?characterName; SEPARATOR=", ") AS ?voicedCharactersName)
    ?languageOfVoicing
WHERE {
    ?voiceActor anime:voiceActed ?character ;
                anime:languageOfVoicing [ schema:alternateName ?languageOfVoicing ] ;
                schema:name ?voiceActorName .
    ?character schema:name ?characterName .
    MINUS { ?character schema:alternateName ?characterName . }
    FILTER ( LANG(?languageOfVoicing) = "en" . )
}
GROUP BY ?voiceActorName ?languageOfVoicing
ORDER BY DESC(?voicedAnimeCount)
LIMIT 5


# 6. (Fabio) i 3 anime più ridoppiati
SELECT 
    ?element 
    (COUNT(DISTINCT ?streamingLanguage) AS ?languagesCount)	# conteggio linguaggi distinti per elemento
WHERE {
    ?element rdf:type dbpedia:Anime ;
             anime:isStreamedOn ?streamingEvent .
    ?streamingEvent schema:inLanguage ?streamingLanguage .
    ?streamingEvent schema:publishedOn ?streamingPlatform .
}
GROUP BY ?element
ORDER BY DESC(?languagesCount)
LIMIT 3		


# Query 7
# Dato il nome di un character, fornire tutte le informazioni disponibili 
# (nome alternativo, descrizione, anime di appartenenza, lingue in cui è stato doppiato)
SELECT  
    ?character 
    ?characterAlterName 
    (SUBSTR(?description, 1, 20) AS ?characterDescription)  # Riduce la lunghezza della descrizione
    (GROUP_CONCAT(DISTINCT ?animeName; SEPARATOR=" - ") AS ?presentInAnime)  
    (GROUP_CONCAT(DISTINCT ?voicingLang; SEPARATOR=", ") AS ?voicedInLanguages)  
WHERE {
  	?character schema:name "${NOME_PERSONAGGIO}" ;
               anime:animeWithCharacter ?anime ;
               anime:hasVoiceActor [ anime:languageOfVoicing [ schema:alternateName ?voicingLang ] ] .
    OPTIONAL { ?character schema:alternateName ?characterAlterName . }
	OPTIONAL { ?character dcterms:description ?description . }
    ?anime dcterms:title ?animeName .
    MINUS { ?anime schema:alternateName ?animeName }
    FILTER ( LANG(?voicingLang) = "en" ) .
}
GROUP BY ?character ?characterAlterName ?description


# 8. (Fabio) tutti gli anime currently airing e relative piattaforme di streaming
SELECT 
    ?element 
    (GROUP_CONCAT(?platformTitle; SEPARATOR=", ") AS ?platforms)
WHERE {
    ?element rdf:type dbpedia:Anime ;
             anime:creativeWorkStatus anime:CreativeWorkStatus_Finished_Airing .
    ?element anime:isStreamedOn ?streamingEvent .
    ?streamingEvent schema:publishedOn ?publishedOn .
    ?publishedOn dcterms:title ?platformTitle .
}
GROUP BY ?element


# Query 9
# Tutti gli anime presenti su Crunchyroll che sono disponibili in lingua italiana
SELECT 
    ?anime_name ?streaming_url 
WHERE {
    ?brd_event schema:publishedOn anime:Broadcast_Crunchyroll ;
               schema:inLanguage anime:Language_it-IT ;
               anime:providesContentFor ?anime ;
               schema:url ?streaming_url .
    
    ?anime dcterms:title ?anime_name .
    MINUS { ?anime schema:alternateName ?anime_name }
}


# 10. (Fabio) dato un titolo di un anime, fornire siti di streaming+lingue disponibili 
# NB ho tolto la seconda parte che era uguale ad un altra query 3
SELECT 
    ?title 
    ?streamingPlatformTitle 
    (GROUP_CONCAT(?languageTitle; SEPARATOR=", ") AS ?language)
WHERE {
    ?element rdf:type dbpedia:Anime ;
             anime:isStreamedOn ?streamingEvent ;
             dcterms:title ?originalTitle ;
             BIND(STR(?originalTitle) AS ?title) .
    FILTER ( CONTAINS(?title, "Dragon Ball") ) .
    ?streamingEvent schema:inLanguage ?streamingLanguage ;
                    schema:publishedOn ?streamingPlatform . 
    ?streamingLanguage dcterms:title ?languageTitle .
    MINUS { ?streamingLanguage dcterms:alternative ?languageTitle . }
    ?streamingPlatform dcterms:title ?streamingPlatformTitle .
}
GROUP BY ?title ?streamingPlatformTitle
